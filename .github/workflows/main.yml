#
#name: CI / CD for Angular
#on:
#  push:
#    branches: [ "master" ]
#
#jobs:
#  build-and-deploy:
#    runs-on: ubuntu-latest
#    steps:
#      - name: Checkout
#        uses: actions/checkout@v3
#
#      - name: Set up node.js
#        uses: actions/setup-node@v3.3.0
#        with:
#          node-version: '16'
#          cache: 'npm'
#
#      - name: Install dependencies
#        run: npm ci
#
#      - name: Lint
#        run: npm run lint
#
#      - name: Tests
#        run: npm run test:prod
#
#      - name: Replace secret
#        uses: cschleiden/replace-tokens@v1
#        with:
#          tokenPrefix: '{'
#          tokenSuffix: '}'
#          files: 'src/environments/environment.prod.ts'
#        env:
#          SECRET_API_KEY: ${{ secrets.API_KEY}}
#
#      - name: Build
#        run: npm run build:prod
#
##      - name: Deploy to GitHub Pages
##        uses: crazy-max/ghaction-github-pages@v3
##        with:
##          target_branch: gh-pages
##          build_dir: dist/weather-app
##        env:
##          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
#
name: Angular GitHub CI
on:
  push:
    branches:
      - main

jobs:
  ci:
    runs-on: ubuntu-latest

    strategy:
      matrix:
        node-version: [10.x, 12.x]

    steps:
      - uses: actions/checkout@v2

      - name: Use Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v1
        with:
          node-version: ${{ matrix.node-version }}

      - name: Cache node modules
        id: cache-nodemodules
        uses: actions/cache@v2
        env:
          cache-name: cache-node-modules
        with:
          # caching node_modules
          path: node_modules
          key: ${{ runner.os }}-build-${{ env.cache-name }}-${{ hashFiles('**/package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-build-${{ env.cache-name }}-
            ${{ runner.os }}-build-
            ${{ runner.os }}-

      - name: Install Dependencies
        if: steps.cache-nodemodules.outputs.cache-hit != 'true'
        run: |
          npm ci

      - name: Build
        run: |
          npm run build -- --prod

      - name: Lint
        run: |
          npm run lint

      - name: Test
        run: |
          npm run test -- --prod
